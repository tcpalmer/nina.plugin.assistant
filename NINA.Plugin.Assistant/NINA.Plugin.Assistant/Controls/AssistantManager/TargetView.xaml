<UserControl x:Class="Assistant.NINAPlugin.Controls.AssistantManager.TargetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:astro="clr-namespace:NINA.Astrometry;assembly=NINA.Astrometry"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Assistant.NINAPlugin.Controls.AssistantManager"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ninactrl="clr-namespace:NINA.CustomControlLibrary;assembly=NINA.CustomControlLibrary"
             xmlns:nrules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
             xmlns:rules="clr-namespace:Assistant.NINAPlugin.Controls.ValidationRules"
             xmlns:uc="clr-namespace:Assistant.NINAPlugin.Controls.AssistantManager"
             xmlns:util="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
             d:DesignHeight="500"
             d:DesignWidth="800"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary Source="../Resources/Resources.xaml" />
    </UserControl.Resources>

    <StackPanel Name="TargetViewPanel"
                Width="700"
                Margin="20,10,0,0"
                Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
            <Label Margin="0,0,0,6"
                   VerticalAlignment="Center"
                   Content="Target:"
                   FontSize="18"
                   FontWeight="Bold" />
            <Label Margin="0,0,0,6"
                   VerticalAlignment="Center"
                   Content="{Binding TargetProxy.Target.Name}"
                   FontSize="18" />
            <Path Width="15"
                  Height="15"
                  Margin="6,0,3,6"
                  VerticalAlignment="Center"
                  Data="{Binding TargetActive, Converter={StaticResource StatusConverter}}"
                  Fill="{Binding TargetActive, Converter={StaticResource StatusMarkColorConverter}}"
                  Stretch="Uniform"
                  ToolTip="Target active for planner?" />
            <uc:DocumentationLink URL="target-management/targets.html" />
        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <uc:ActionMenuBar DataContext="{Binding}" />
            <StackPanel Margin="18,0,0,16"
                        Orientation="Horizontal">
                <Button Width="25"
                        Height="25"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        Command="{Binding ShowTargetImportViewCommand}"
                        IsEnabled="{Binding ShowEditView}"
                        Style="{StaticResource BackgroundButton}"
                        ToolTip="Import coordinates"
                        ToolTipService.ShowOnDisabled="True">
                    <Grid>
                        <Path Margin="5"
                              Data="{StaticResource SS_ImportSVG}"
                              Fill="{StaticResource ButtonForegroundBrush}"
                              Stretch="Uniform" />
                    </Grid>
                </Button>
                <Button Width="25"
                        Height="25"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        Command="{Binding ResetTargetCommand}"
                        IsEnabled="{Binding ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                        Style="{StaticResource BackgroundButton}"
                        ToolTip="Reset target completion"
                        ToolTipService.ShowOnDisabled="True">
                    <Grid>
                        <Path Margin="5"
                              Data="{StaticResource SS_RefreshSVG}"
                              Fill="{StaticResource ButtonForegroundBrush}"
                              Stretch="Uniform" />
                    </Grid>
                </Button>
            </StackPanel>
        </StackPanel>

        <Grid Width="600"
              Margin="12,0,0,6"
              HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140" />
                <ColumnDefinition Width="460" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Name"
                       ToolTip="Name of the Target" />
            <TextBox Grid.Row="0"
                     Grid.Column="1"
                     Width="180"
                     MaxHeight="20"
                     HorizontalAlignment="Left"
                     Visibility="{Binding ShowEditView, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <TextBox.Text>
                    <Binding Path="TargetProxy.Target.Name"
                             UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <rules:RequiredFieldValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Row="0"
                       Grid.Column="1"
                       MaxHeight="20"
                       Margin="0,0,0,0"
                       Text="{Binding TargetProxy.Target.Name}"
                       Visibility="{Binding ShowEditView, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}" />

            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Enabled"
                       ToolTip="Target enabled for acquisition" />
            <CheckBox Grid.Row="1"
                      Grid.Column="1"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      IsChecked="{Binding Path=TargetProxy.Target.Enabled, Mode=TwoWay}"
                      Visibility="{Binding ShowEditView, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
            <TextBlock Grid.Row="1"
                       Grid.Column="1"
                       MaxHeight="20"
                       Margin="0,0,0,0"
                       Text="{Binding TargetProxy.Target.Enabled}"
                       Visibility="{Binding ShowEditView, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}" />

            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Coordinates"
                       ToolTip="Target coordinates" />
            <StackPanel Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        Visibility="{Binding ShowEditView, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <TextBox MinWidth="25"
                         Margin="0,0,0,0"
                         VerticalContentAlignment="Center"
                         TextAlignment="Right">
                    <TextBox.Text>
                        <Binding Path="TargetProxy.Target.RAHours"
                                 UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <nrules:HoursRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock VerticalAlignment="Center">h</TextBlock>
                <TextBox MinWidth="25"
                         Margin="8,0,0,0"
                         VerticalContentAlignment="Center"
                         TextAlignment="Right">
                    <TextBox.Text>
                        <Binding Path="TargetProxy.Target.RAMinutes"
                                 UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <nrules:MinutesRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock VerticalAlignment="Center">m</TextBlock>
                <TextBox MinWidth="25"
                         Margin="8,0,0,0"
                         VerticalContentAlignment="Center"
                         TextAlignment="Right">
                    <TextBox.Text>
                        <Binding Path="TargetProxy.Target.RASeconds"
                                 StringFormat="N1"
                                 UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <nrules:SecondsRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock VerticalAlignment="Center">s</TextBlock>

                <TextBox MinWidth="25"
                         Margin="28,0,0,0"
                         VerticalContentAlignment="Center"
                         TextAlignment="Right">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource DecDegreeConverter}"
                                      UpdateSourceTrigger="LostFocus">
                            <Binding Path="TargetProxy.Target.NegativeDec" />
                            <Binding Path="TargetProxy.Target.DecDegrees">
                                <Binding.ValidationRules>
                                    <nrules:DegreesRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock VerticalAlignment="Center">d</TextBlock>
                <TextBox MinWidth="25"
                         Margin="8,0,0,0"
                         VerticalContentAlignment="Center"
                         TextAlignment="Right">
                    <TextBox.Text>
                        <Binding Path="TargetProxy.Target.DecMinutes"
                                 UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <nrules:MinutesRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock VerticalAlignment="Center">m</TextBlock>
                <TextBox MinWidth="25"
                         Margin="8,0,0,0"
                         VerticalContentAlignment="Center"
                         TextAlignment="Right">
                    <TextBox.Text>
                        <Binding Path="TargetProxy.Target.DecSeconds"
                                 StringFormat="N1"
                                 UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <nrules:SecondsRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock VerticalAlignment="Center">s</TextBlock>
                <ComboBox MaxHeight="20"
                          Margin="28,0,0,0"
                          ItemsSource="{Binding Source={local:EnumBindingSource {x:Type astro:Epoch}}}"
                          SelectedValue="{Binding TargetProxy.Target.Epoch}" />
            </StackPanel>
            <StackPanel Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        Visibility="{Binding ShowEditView, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}">
                <TextBlock MaxHeight="20"
                           Text="{Binding TargetProxy.Target.RAString}" />
                <TextBlock MaxHeight="20"
                           Margin="16,0,0,0"
                           Text="{Binding TargetProxy.Target.DecString}" />
                <TextBlock MaxHeight="20"
                           Margin="16,0,0,0"
                           Text="{Binding TargetProxy.Target.Epoch}" />
                <Button Width="25"
                        Height="25"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Right"
                        Command="{Binding SendCoordinatesToFramingAssistantCommand}"
                        ToolTip="Send coordinates to the Framing Wizard">
                    <Grid>
                        <Path Margin="5"
                              Data="{StaticResource FocusAssistantSVG}"
                              Fill="{StaticResource ButtonForegroundBrush}"
                              Stretch="Uniform" />
                    </Grid>
                </Button>
            </StackPanel>

            <TextBlock Grid.Row="3"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Rotation"
                       ToolTip="Target rotation" />
            <StackPanel Grid.Row="3"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        Visibility="{Binding ShowEditView, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <TextBox Width="45"
                         MaxHeight="20"
                         HorizontalAlignment="Left">
                    <TextBox.Text>
                        <Binding Path="TargetProxy.Target.Rotation"
                                 UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <rules:DoubleRangeRule>
                                    <rules:DoubleRangeRule.ValidRange>
                                        <rules:DoubleRangeChecker Maximum="360"
                                                                  Minimum="0" />
                                    </rules:DoubleRangeRule.ValidRange>
                                </rules:DoubleRangeRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Margin="2,0,0,0"
                           Text="°" />
            </StackPanel>
            <TextBlock Grid.Row="3"
                       Grid.Column="1"
                       MaxHeight="20"
                       Text="{Binding TargetProxy.Target.Rotation, Converter={StaticResource DegreesDisplayConverter}}"
                       Visibility="{Binding ShowEditView, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}" />

            <TextBlock Grid.Row="4"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="ROI"
                       ToolTip="Target region of interest" />
            <TextBox Grid.Row="4"
                     Grid.Column="1"
                     Width="30"
                     MaxHeight="20"
                     HorizontalAlignment="Left"
                     Visibility="{Binding ShowEditView, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <TextBox.Text>
                    <Binding Path="TargetProxy.Target.ROI"
                             UpdateSourceTrigger="LostFocus">
                        <Binding.ValidationRules>
                            <rules:DoubleRangeRule>
                                <rules:DoubleRangeRule.ValidRange>
                                    <rules:DoubleRangeChecker Maximum="100"
                                                              Minimum="1" />
                                </rules:DoubleRangeRule.ValidRange>
                            </rules:DoubleRangeRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Row="4"
                       Grid.Column="1"
                       MaxHeight="20"
                       Text="{Binding TargetProxy.Target.ROI, Converter={StaticResource PercentDisplayConverter}}"
                       Visibility="{Binding ShowEditView, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}" />
        </Grid>

        <StackPanel Margin="12,0,0,6"
                    Orientation="Vertical"
                    Visibility="{Binding ShowTargetImportView, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
            <uc:TargetImportView DataContext="{Binding TargetImportVM}" />
        </StackPanel>

        <StackPanel Orientation="Horizontal">
            <TextBlock Margin="12,5,0,6"
                       VerticalAlignment="Center"
                       FontSize="14"
                       FontWeight="Bold"
                       Text="Exposure Plans" />
            <Button Width="16"
                    Height="16"
                    Margin="12,5,0,6"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Right"
                    Command="{Binding RefreshCommand}"
                    IsEnabled="{Binding ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                    Style="{StaticResource BackgroundButton}"
                    ToolTip="Refresh exposure plans (sync with database)"
                    ToolTipService.ShowOnDisabled="True">
                <Grid>
                    <Path Data="{StaticResource SS_RefreshSVG}"
                          Fill="{StaticResource ButtonForegroundBrush}"
                          Stretch="Uniform" />
                </Grid>
            </Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal">
            <Button Width="25"
                    Height="25"
                    Margin="10,0,0,6"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Left"
                    Command="{Binding AddExposurePlanCommand}"
                    IsEnabled="{Binding ShowEditView}"
                    Style="{StaticResource BackgroundButton}"
                    ToolTip="Add exposure plan"
                    ToolTipService.ShowOnDisabled="True">
                <Grid>
                    <Path Margin="5"
                          Data="{StaticResource SS_NewSVG}"
                          Fill="{StaticResource ButtonForegroundBrush}"
                          Stretch="Uniform" />
                </Grid>
            </Button>
            <Button Width="25"
                    Height="25"
                    Margin="10,0,0,6"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Left"
                    Command="{Binding CopyExposurePlansCommand}"
                    IsEnabled="{Binding ExposurePlansCopyEnabled}"
                    Style="{StaticResource BackgroundButton}"
                    ToolTip="Copy exposure plans"
                    ToolTipService.ShowOnDisabled="True">
                <Grid>
                    <Path Margin="5"
                          Data="{StaticResource SS_CopySVG}"
                          Fill="{StaticResource ButtonForegroundBrush}"
                          Stretch="Uniform" />
                </Grid>
            </Button>
            <Button Width="25"
                    Height="25"
                    Margin="10,0,0,6"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Left"
                    Command="{Binding PasteExposurePlansCommand}"
                    IsEnabled="{Binding ExposurePlansPasteEnabled}"
                    Style="{StaticResource BackgroundButton}"
                    ToolTip="Paste exposure plans"
                    ToolTipService.ShowOnDisabled="True">
                <Grid>
                    <Path Margin="5"
                          Data="{StaticResource SS_PasteSVG}"
                          Fill="{StaticResource ButtonForegroundBrush}"
                          Stretch="Uniform" />
                </Grid>
            </Button>
            <Button Width="25"
                    Height="25"
                    Margin="10,0,0,6"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Left"
                    Command="{Binding DeleteExposurePlansCommand}"
                    IsEnabled="{Binding ExposurePlansDeleteEnabled}"
                    Style="{StaticResource BackgroundButton}"
                    ToolTip="Delete all exposure plans"
                    ToolTipService.ShowOnDisabled="True">
                <Grid>
                    <Path Margin="5"
                          Data="{StaticResource SS_DeleteSVG}"
                          Fill="{StaticResource ButtonForegroundBrush}"
                          Stretch="Uniform" />
                </Grid>
            </Button>
        </StackPanel>

        <DataGrid Name="ExposurePlansDataGrid"
                  Grid.Row="0"
                  Height="180"
                  Margin="12,0,0,0"
                  AutoGenerateColumns="False"
                  BorderThickness="0"
                  CanUserAddRows="False"
                  HorizontalScrollBarVisibility="Disabled"
                  IsReadOnly="{Binding ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                  ItemsSource="{Binding ExposurePlans}"
                  RowHeight="25"
                  VerticalScrollBarVisibility="Auto">

            <DataGrid.Resources>
                <util:BindingProxy x:Key="bindProxy"
                                   Data="{Binding}" />
            </DataGrid.Resources>

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalAlignment"
                            Value="Left" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource BorderBrush}" />
                    <Setter Property="BorderThickness"
                            Value="0" />
                    <Setter Property="MinHeight"
                            Value="25" />
                    <Setter Property="Margin"
                            Value="5,3,5,3" />
                    <Setter Property="FontWeight"
                            Value="Bold" />
                    <Setter Property="FontSize"
                            Value="12" />
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource BorderBrush}" />
                    <Setter Property="BorderThickness"
                            Value="0" />
                    <Setter Property="MinHeight"
                            Value="22" />
                    <Setter Property="Margin"
                            Value="5,3,5,3" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ButtonBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="MinHeight"
                            Value="22" />
                    <Setter Property="Background"
                            Value="Transparent" />
                    <Setter Property="VerticalAlignment"
                            Value="Center" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource SecondaryBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Template"
                                   ToolTip="Exposure template" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Width="Auto"
                                       Text="{Binding ExposureTemplate.Name}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox DisplayMemberPath="Value"
                                      ItemsSource="{Binding ElementName=TargetViewPanel, Path=DataContext.ExposureTemplateChoices}"
                                      SelectedValue="{Binding ExposureTemplateId, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                                      SelectedValuePath="Key"
                                      SelectionChanged="ExposureTemplateId_SelectionChanged" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Exposure"
                                   ToolTip="Exposure time in seconds (leave blank for template default)" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ninactrl:HintTextBox Width="Auto"
                                                  VerticalAlignment="Center"
                                                  HintText="(Template)"
                                                  IsEnabled="False">
                                <ninactrl:HintTextBox.Text>
                                    <Binding Converter="{StaticResource MinusOneToEmptyStringConverter}"
                                             Path="Exposure"
                                             UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:NullableDoubleRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ninactrl:HintTextBox.Text>
                            </ninactrl:HintTextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ninactrl:HintTextBox Width="Auto"
                                                  VerticalAlignment="Center"
                                                  HintText="(Template)">
                                <ninactrl:HintTextBox.Text>
                                    <Binding Converter="{StaticResource MinusOneToEmptyStringConverter}"
                                             Path="Exposure"
                                             UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:NullableDoubleRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ninactrl:HintTextBox.Text>
                            </ninactrl:HintTextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Desired"
                                   ToolTip="Total number of desired images" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Width="Auto"
                                       Text="{Binding Desired}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Width="Auto">
                                <TextBox.Text>
                                    <Binding Path="Desired"
                                             UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeRule>
                                                <rules:IntRangeRule.ValidRange>
                                                    <rules:IntRangeChecker Maximum="99999"
                                                                           Minimum="1" />
                                                </rules:IntRangeRule.ValidRange>
                                            </rules:IntRangeRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Accepted"
                                   ToolTip="Total number of accepted images" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Width="Auto"
                                       Text="{Binding Accepted}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Width="Auto">
                                <TextBox.Text>
                                    <Binding Path="Accepted"
                                             UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeRule>
                                                <rules:IntRangeRule.ValidRange>
                                                    <rules:IntRangeChecker Maximum="99999"
                                                                           Minimum="0" />
                                                </rules:IntRangeRule.ValidRange>
                                            </rules:IntRangeRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Acquired"
                                   ToolTip="Number of images acquired to date (read only)" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Width="Auto"
                                       Text="{Binding Acquired}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="%"
                                   ToolTip="Percent complete" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PercentComplete, StringFormat={}{0:0}%}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Width="22"
                                    Height="22"
                                    Margin="10,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalContentAlignment="Right"
                                    Command="{Binding ElementName=TargetViewPanel, Path=DataContext.DeleteExposurePlanCommand}"
                                    CommandParameter="{Binding}"
                                    IsEnabled="{Binding ElementName=TargetViewPanel, Path=DataContext.ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                                    Style="{StaticResource BackgroundButton}"
                                    ToolTip="Delete exposure plan"
                                    ToolTipService.ShowOnDisabled="True">
                                <Grid>
                                    <Path Margin="5"
                                          Data="{StaticResource SS_DeleteSVG}"
                                          Fill="{StaticResource ButtonForegroundBrush}"
                                          Stretch="Uniform" />
                                </Grid>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Visibility="{Binding HaveOverrideExposureOrder, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}">
            <StackPanel Name="ExposureOrderDefault"
                        Orientation="Horizontal">
                <TextBlock Margin="12,12,0,6"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Bold"
                           Text="Exposure Order: Default" />
                <Button Width="25"
                        Height="25"
                        Margin="6,0,3,6"
                        VerticalAlignment="Bottom"
                        Command="{Binding OverrideExposureOrderCommand}"
                        IsEnabled="{Binding ElementName=TargetViewPanel, Path=DataContext.ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                        Style="{StaticResource BackgroundButton}"
                        ToolTip="Override default exposure order"
                        ToolTipService.ShowOnDisabled="True">
                    <Grid>
                        <Path Margin="5"
                              Data="{StaticResource SS_SettingsSVG}"
                              Fill="{StaticResource ButtonForegroundBrush}"
                              Stretch="Uniform" />
                    </Grid>
                </Button>
                <uc:DocumentationLink URL="target-management/exposure-plans.html#exposure-order" />
            </StackPanel>

            <TextBlock Margin="12,0,12,12"
                       HorizontalAlignment="Left"
                       FontStyle="Italic"
                       Text="Exposure ordering based on the Filter Switch Frequency and Dither settings on the Project.  Complete exposure plans will be dropped from the rotation and the pattern will repeat until all are complete.  If Filter Switch Frequency is 0, then '...' implies repeat until done and dithers will not be shown.  This is only representative - the ultimate ordering of exposures by the planner depends on many factors."
                       TextWrapping="Wrap" />

            <ScrollViewer Margin="12,5,12,0"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Hidden">
                <TextBlock Text="{Binding DefaultExposureOrder}" />
            </ScrollViewer>
        </StackPanel>

        <StackPanel Visibility="{Binding HaveOverrideExposureOrder, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
            <StackPanel Name="ExposureOrderOverride"
                        Orientation="Horizontal">
                <TextBlock Margin="12,12,0,6"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Bold"
                           Text="Exposure Order: Override" />
                <Button Width="25"
                        Height="25"
                        Margin="6,0,3,6"
                        VerticalAlignment="Bottom"
                        Command="{Binding OverrideExposureOrderCommand}"
                        IsEnabled="{Binding ElementName=TargetViewPanel, Path=DataContext.ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                        Style="{StaticResource BackgroundButton}"
                        ToolTip="Edit override exposure order"
                        ToolTipService.ShowOnDisabled="True">
                    <Grid>
                        <Path Margin="5"
                              Data="{StaticResource SS_SettingsSVG}"
                              Fill="{StaticResource ButtonForegroundBrush}"
                              Stretch="Uniform" />
                    </Grid>
                </Button>
                <Button Width="25"
                        Height="25"
                        Margin="0,0,3,6"
                        VerticalAlignment="Bottom"
                        Command="{Binding CancelOverrideExposureOrderCommand}"
                        IsEnabled="{Binding ElementName=TargetViewPanel, Path=DataContext.ShowEditView, Converter={StaticResource InverseBooleanConverter}}"
                        Style="{StaticResource BackgroundButton}"
                        ToolTip="Cancel override exposure order"
                        ToolTipService.ShowOnDisabled="True">
                    <Grid>
                        <Path Margin="5"
                              Data="{StaticResource SS_CancelSVG}"
                              Fill="{StaticResource ButtonForegroundBrush}"
                              Stretch="Uniform" />
                    </Grid>
                </Button>
                <uc:DocumentationLink URL="target-management/exposure-plans.html#exposure-order" />
            </StackPanel>

            <TextBlock Margin="12,0,12,12"
                       HorizontalAlignment="Left"
                       FontStyle="Italic"
                       Text="Exposure order based on manual override.  Complete exposure plans will be dropped from the rotation and the pattern will repeat until all are complete.  This is only representative - the ultimate ordering of exposures by the planner depends on many factors."
                       TextWrapping="Wrap" />

            <ScrollViewer Margin="12,5,12,0"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Hidden">
                <TextBlock Text="{Binding OverrideExposureOrderDisplay}" />
            </ScrollViewer>
        </StackPanel>

        <Popup IsOpen="{Binding ShowOverrideExposureOrderPopup}"
               Placement="Top"
               PlacementTarget="{Binding ElementName=ExposureOrderDefault}"
               VerticalOffset="-60">
            <local:OverrideExposureOrderView DataContext="{Binding OverrideExposureOrderVM}" />
        </Popup>
    </StackPanel>
</UserControl>